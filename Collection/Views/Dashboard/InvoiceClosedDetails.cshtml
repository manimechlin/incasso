@using incasso.Helper
@model  incasso.Dashboard.dto.CollectionDashboardDto
@{
    Layout = null;
}

<a href="#!" class="btn waves-effect waves-light main-green" id="btn_dwl_invoice_closed"><i class="material-icons left">file_download</i> @L("Excel")</a>
<br /><label class="right">@L("ClickToSeeNotes")</label>
<table class="highlight striped bordered" id="invoice-table">
    <thead>
        <tr>
            <th width="10%">@L("Invoicenr")</th>
            <th width="10%">@L("Date")</th>
            <th width="10%">@L("DueDate")</th>
            <th width="10%">@L("PaymentDate")</th>
            <th class="right-align" width="5%">@L("Expired")</th>
            <th class="right-align" width="10%">@L("InvoiceAmount")</th>
            <th width="45%"></th>
        </tr>
    </thead>
    <tbody>
        @if (Model.InvoiceList != null && Model.InvoiceList.Any())
        {
            foreach (var invoice in Model.InvoiceList)
            {
                var days = 0;
                DateTime? expired = invoice.ExpiredDate.ToDate();
                DateTime? paymentDate = invoice.PaymentDate.ToDate();
                if( expired.HasValue&& paymentDate.HasValue)
                {
                    days =(int) ((expired.Value- paymentDate.Value).TotalDays);
                }

        <tr id="INV_ID" class="invoice-row clickable">
            <td>
                <input style="display:none;" class="c-checkbox" type="checkbox" name="selectedInvoice[]" value="<@invoice.Id" id="@invoice.Id" />
                <span>@invoice.InvoiceNo</span>
            </td>
            <td>@(invoice.InvoiceDate.ToGridDateFormat())</td>
            <td>@(invoice.ExpiredDate.ToGridDateFormat())</td>
            <td>@(invoice.PaymentDate.ToGridDateFormat())</td>
            <td class="right-align @(days<0? "red-text":"")">  @string.Format(System.Globalization.CultureInfo.GetCultureInfo("de-DE"), "{0:#,0.####}", days)</td>
            <td class="right-align">@invoice.Currency@(invoice.Amount.ToIncassoGridFormat()) </td>
            <td></td>
        </tr>
                <tr style="display:none;" class="invoice-notes">
                    <td colspan="7">
                        <div class="section">
                            @if (invoice.Notes != null && invoice.Notes.Any())
                            {
                                foreach (var note in invoice.Notes.OrderByDescending(x => x.NoteDate))
                                {
                                    <blockquote>
                                        <span class="semibold">@note.NoteDate.ToGridFormat()</span>:<br />
                                        @note.Notes
                                    </blockquote>
                                }
                            }
                            else
                            {
                                <span class="grey-text text-darken-2">@L("NoNotesToDisplay")</span>
                            }

                        </div>
                    </td>
                </tr>
            }

        }
        else
        {
        <tr class="invoice-notes">
            <td colspan="7" class="text-center"> @L("NoInvoiceToDisplay")</td>
        </tr>

        }
    </tbody>
</table>			