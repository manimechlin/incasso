@using incasso.Helper
@model   incasso.Invoices.Dto.GraphDto
@{
    Layout = null;
}	


	<div class="col s12 center">
    <h5>@L("Overviewoutstandinginvoices"): <span class="semibold">@Model.DebtorDetails.Name - @Model.DebtorDetails.Number</span></h5>
    <br />
</div>
<div class="row">
    <div class="col s12 l9">
        <div class="row no-padding no-margin">
            <div class="col s12 l6">
                <div id="donutchart" style="overflow:hidden;width:100%;height:200px;"></div>
            </div>
            <div class="col s12 l6">
                <div class="row">
                    <div class="col s12 l6">
                        <br /><br />
                        <i class="material-icons red-text left">fiber_manual_record</i><span class="semibold uppercase">@L("OPEN")</span><br />
                        @Model.Currency@Model.TotalOpen.ToIncassoGridFormat() <br /><br />
                        <i class="material-icons blue-text left">fiber_manual_record</i><span class="semibold uppercase">@L("PAID")</span><br />
                        @Model.Currency@((Model.TotalPaid).ToIncassoGridFormat())
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>

	$(function(){
@if (Model.TotalTotalOutStanding > 0)
{

    <Text>
        $(".main-info").find(".collapsible-header").addClass("active").end().collapsible({ accordion: false }).show().collapsible('close', 3);

        </Text>
} else
{

    <Text>
        $(".main-info").find(".collapsible-header").addClass("active").end().collapsible({ accordion: false }).show().collapsible('close', 2);
        </text>

}
        google.charts.load("current", { packages: ["corechart"] });
                    google.charts.setOnLoadCallback(drawChart);
                    function drawChart(){
    var data = google.visualization.arrayToDataTable([
                    	  ['Invoices', 'Amount'],
        	                 ['Paid', parseFloat( '@Model.TotalPaid'.replace(/,/g, ''))],
                    	  ['Open',parseFloat('@Model.TotalTotalOutStanding'.replace(/,/g, ''))]
                    	]);
                    	var formatter = new google.visualization.NumberFormat({prefix:'\u20AC'});
                    	formatter.format(data,1);
                    	var options={title:'Total Overview',fontName:'Open Sans',pieSliceText:'none',pieSliceTextStyle:{fontSize:10},colors:['#2196f3','#f44336'],backgroundColor:'transparent',pieHole: 0.7,legend:{position:'bottom'},tooltip:{ignoreBounds:false},chartArea:{top:10,left:"60%",height:"90%"},vAxis:{format:'currency'}};
                    	var chart = new google.visualization.PieChart(document.getElementById('donutchart'));
                    	chart.draw(data, options);
                    }
                });
</script>
